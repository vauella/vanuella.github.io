---
title: "Songs"
subtitle: "Lyrics from Vanuella Watt's musical creations"
title-block-banner: true
page-layout: full
anchor-sections: false
css: vanuella.css
---

::: {.hero .songs-hero}
::: {.hero-content}
# Soulful Melodies from the Pacific {.hero-title aria-label="Soulful Melodies from the Pacific"}

::: {.hero-subtitle}
Where Oceanic Roots Meet Contemporary Poetry
:::
:::
:::

::: {.genre-filter role="tablist" aria-label="Genre filter"}
<button class="filter-btn active" data-genre="all" role="tab" aria-selected="true">All Genres</button>
<button class="filter-btn" data-genre="fusion" role="tab" aria-selected="false">Cultural Fusion</button>
<button class="filter-btn" data-genre="electro" role="tab" aria-selected="false">Electro-Soul</button>
<button class="filter-btn" data-genre="chanson" role="tab" aria-selected="false">Poetic Chanson</button>
:::

::: {.songs-grid}

::: {.song-card data-genre="fusion" role="article" aria-labelledby="oceania-title"}
::: {.card-inner}
<img src="/images/la-meme-couleur-de-coeur.jpg" alt="La mÃªme couleur de cÅ“ur" class="card-image" loading="lazy">

<div class="card-content">
<div class="song-meta">
<span class="release-year">2025</span>
<span class="song-badge">Urban soul anthem exploring shared humanity in crisis</span>
</div>

<h2 class="song-title" id="lamemecouleurdecaeur-title">La mÃªme couleur de cÅ“ur</h2>

<div class="lyrics-preview" id="lamemecouleurdecaeur-lyrics" aria-expanded="false">
"Urban soul anthem exploring shared humanity in crisis..."
<button class="reveal-lyrics" aria-controls="lamemecouleurdecaeur-lyrics" aria-expanded="false">Show More</button>
</div>

<div class="song-actions">
<a href="#" class="cta-button small primary" aria-label="Stream Oceania">Stream Now</a>
<a href="lamemecouleurdecaeur.qmd" class="cta-button small secondary" aria-label="View full lyrics for Oceania">Full Lyrics</a>
</div>
</div>
:::
:::


::: {.song-card data-genre="fusion" role="article" aria-labelledby="oceania-title"}
::: {.card-inner}
<img src="/gallery/vanu-oceania.jpg" alt="Oceania Cover Art" class="card-image" loading="lazy">

<div class="card-content">
<div class="song-meta">
<span class="release-year">2023</span>
<span class="song-badge">ðŸŒŠ Pacific Anthem</span>
</div>

<h2 class="song-title" id="oceania-title">Oceania</h2>

<div class="lyrics-preview" id="oceania-lyrics" aria-expanded="false">
"A wave caressing every Pacific Island beach..."
<button class="reveal-lyrics" aria-controls="oceania-lyrics" aria-expanded="false">Show More</button>
</div>

<div class="song-actions">
<a href="#" class="cta-button small primary" aria-label="Stream Oceania">Stream Now</a>
<a href="oceania.qmd" class="cta-button small secondary" aria-label="View full lyrics for Oceania">Full Lyrics</a>
</div>
</div>
:::
:::

::: {.song-card data-genre="electro" role="article" aria-labelledby="respire-title"}
::: {.card-inner}
<img src="/gallery/song-respire.jpg" alt="Respire Cover Art" class="card-image" loading="lazy">

<div class="card-content">
<div class="song-meta">
<span class="release-year">2020</span>
<span class="song-badge">âš¡ Electro-Soul</span>
</div>

<h2 class="song-title" id="respire-title">Respire</h2>

<div class="lyrics-preview" id="respire-lyrics" aria-expanded="false">
"Between concrete and stardust I find my rhythm..."
<button class="reveal-lyrics" aria-controls="respire-lyrics" aria-expanded="false">Show More</button>
</div>

<div class="song-actions">
<a href="#" class="cta-button small primary" aria-label="Stream Respire">Stream Now</a>
<a href="respire.qmd" class="cta-button small secondary" aria-label="View production notes for Respire">Full Lyrics</a>
</div>
</div>
:::
:::



:::

<style>
/* Global Variables */
:root {
  --twitch-purple: #9146ff;
  --twitch-purple-dark: #772ce8;
  --twitch-dark-light: #1f1b24;
  --glow-color: #e0c3fc;
}

/* Hero Section */
.songs-hero {
  background: linear-gradient(135deg, #1a0633 0%, #2a0845 100%);
  padding: clamp(2rem, 5vw, 4rem) 1rem;
  text-align: center;
}

.hero-title {
  font-size: clamp(2rem, 5vw, 3rem);
  color: white;
}

.hero-subtitle {
  font-size: clamp(1rem, 3vw, 1.5rem);
  color: var(--glow-color);
}

/* Genre Filter */
.genre-filter {
  display: flex;
  gap: 1rem;
  justify-content: center;
  padding: 1rem;
  flex-wrap: wrap;
}

.filter-btn {
  background: var(--twitch-dark-light);
  color: white;
  padding: 0.5rem 1rem;
  border: 2px solid transparent;
  border-radius: 20px;
  cursor: pointer;
  transition: all 0.3s ease;
}

.filter-btn:hover, .filter-btn.active {
  background: var(--twitch-purple);
  border-color: var(--glow-color);
}

/* Song Cards */
.songs-grid {
  display: grid;
  gap: 1.5rem;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  padding: 2rem;
}

.song-card {
  perspective: 1000px;
}

.card-inner {
  background: var(--twitch-dark-light);
  border-radius: 12px;
  overflow: hidden;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.song-card:hover .card-inner {
  transform: translateY(-5px);
  box-shadow: 0 10px 30px rgba(145, 70, 255, 0.2);
}

.card-image {
  width: 100%;
  height: 250px;
  object-fit: cover;
  border-bottom: 2px solid var(--twitch-purple);
  position: relative;
}

.card-image::after {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(180deg, transparent 60%, rgba(0,0,0,0.7) 100%);
}

.card-content {
  padding: 1.5rem;
}

.song-meta {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.75rem;
}

.release-year {
  background: var(--twitch-purple-dark);
  color: white;
  padding: 0.25rem 0.75rem;
  border-radius: 12px;
  font-size: 0.85rem;
}

.song-badge {
  color: var(--glow-color);
  font-size: 0.85rem;
}

.lyrics-preview {
  background: rgba(255,255,255,0.05);
  border-radius: 8px;
  padding: 1rem;
  margin: 1rem 0;
  max-height: 100px;
  overflow: hidden;
  transition: max-height 0.5s ease-in-out;
}

.lyrics-preview[aria-expanded="true"] {
  max-height: 500px;
}

.reveal-lyrics {
  background: none;
  border: none;
  color: var(--glow-color);
  cursor: pointer;
  font-weight: 600;
  padding: 0;
  margin-top: 0.5rem;
}

.cta-button {
  display: inline-block;
  padding: 0.5rem 1rem;
  border-radius: 8px;
  text-decoration: none;
  margin-right: 0.5rem;
}

.cta-button.primary {
  background: var(--twitch-purple);
  color: white;
}

.cta-button.secondary {
  background: transparent;
  border: 1px solid var(--twitch-purple);
  color: var(--glow-color);
}

/* Evolution Timeline */
.evolution-timeline {
  padding: 2rem;
  position: relative;
}

.timeline-title {
  font-size: 1.75rem;
  color: white;
  text-align: center;
  margin-bottom: 2rem;
}

.timeline-item {
  display: flex;
  gap: 1.5rem;
  padding: 1.5rem 0;
  position: relative;
}

.timeline-item::before {
  content: "";
  position: absolute;
  left: 90px;
  top: 0;
  bottom: 0;
  width: 2px;
  background: var(--twitch-purple);
}

.timeline-year {
  width: 80px;
  font-size: 1.25rem;
  font-weight: 700;
  color: var(--glow-color);
  text-align: right;
}

.timeline-content {
  flex: 1;
  background: var(--twitch-dark-light);
  padding: 1rem;
  border-radius: 8px;
  position: relative;
}

.timeline-content::before {
  content: "";
  position: absolute;
  left: -8px;
  top: 15px;
  width: 16px;
  height: 16px;
  background: var(--twitch-purple);
  transform: rotate(45deg);
}

.track-list a {
  color: var(--glow-color);
  text-decoration: none;
}

.track-list a:hover {
  text-decoration: underline;
}

/* Responsive Design */
@media (max-width: 600px) {
  .songs-grid {
    grid-template-columns: 1fr;
  }

  .timeline-item {
    flex-direction: column;
    align-items: flex-start;
  }

  .timeline-year {
    text-align: left;
    width: auto;
  }

  .timeline-item::before {
    left: 10px;
  }

  .timeline-content::before {
    left: 2px;
    top: 50px;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const filterButtons = document.querySelectorAll('[data-genre]');
  const songCards = document.querySelectorAll('.song-card');

  // Lyrics reveal functionality
  document.querySelectorAll('.reveal-lyrics').forEach(button => {
    button.addEventListener('click', (e) => {
      const lyricsDiv = e.target.closest('.lyrics-preview');
      lyricsDiv.setAttribute('aria-expanded', 'true');
      e.target.setAttribute('aria-expanded', 'true');
      e.target.remove();
    });
  });

  // Genre filter functionality
  filterButtons.forEach(button => {
    button.addEventListener('click', () => {
      const genre = button.dataset.genre;
      
      // Update active state and ARIA attributes
      filterButtons.forEach(btn => {
        btn.classList.remove('active');
        btn.setAttribute('aria-selected', 'false');
      });
      button.classList.add('active');
      button.setAttribute('aria-selected', 'true');

      // Filter song cards
      songCards.forEach(card => {
        card.style.display = genre === 'all' || card.dataset.genre === genre 
          ? 'block' 
          : 'none';
      });
    });

    // Keyboard accessibility
    button.addEventListener('keydown', (e) => {
      if (e.key === 'Enter' || e.key === ' ') {
        e.preventDefault();
        button.click();
      }
    });
  });

  // Lazy-load images observer
  const images = document.querySelectorAll('img[loading="lazy"]');
  const observer = new IntersectionObserver((entries, obs) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const img = entry.target;
        img.src = img.dataset.src || img.src;
        obs.unobserve(img);
      }
    });
  }, { rootMargin: '0px 0px 200px 0px' });

  images.forEach(img => observer.observe(img));
});
</script>